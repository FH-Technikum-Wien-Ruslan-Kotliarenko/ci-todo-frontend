name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - deploy/production
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm run test

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonarqube-scanner \
            -Dsonar.projectKey=todo-frontend \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://your-sonarqube-server:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Snyk Security Scan
        uses: snyk/actions@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Build Docker Image
        run: docker build -t your-dockerhub-username/todo-frontend:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push your-dockerhub-username/todo-frontend:${{ github.sha }}

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deploy/production'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: your-ec2-public-ip
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /path/to/your/docker-compose-directory
            docker-compose pull frontend
            docker-compose up -d frontend

      - name: Notify on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Frontend CI/CD Pipeline failed for commit `${{ github.sha }}` in repository `${{ github.repository }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
